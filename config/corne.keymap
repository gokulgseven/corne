/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



/ {
    combos {
        compatible = "zmk,combos";

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <36 27>;
            layers = <0 2 1 3>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <36 26>;
            layers = <0 1 2 3>;
        };

        select {
            bindings = <&kp LG(D)>;
            key-positions = <36 15>;
        };

        paste {
            bindings = <&kt LG(V)>;
            key-positions = <36 28>;
            layers = <0 1 2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp ENTER
            >;
        };

        lower_layer {
            bindings = <
&kp ESC             &kp EXCLAMATION  &kp AT_SIGN  &kp HASH    &kp DOLLAR         &kp PERCENT        &kp CARET             &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp CAPSLOCK        &kp N1           &kp N2       &kp N3      &kp N4             &kp N5             &kp N6                &kp N7         &kp N8          &kp N9                &kp N0                 &kp ENTER
&kp LG(LEFT_SHIFT)  &kp GRAVE        &kp TILDE    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp NON_US_BACKSLASH  &kp PIPE       &kp LEFT_ARROW  &kp DOWN              &kp RIGHT              &kp RG(RIGHT_SHIFT)
                                                  &kp RALT    &trans             &kp SPACE          &kp SPACE             &mo 2          &kp ENTER
            >;
        };

        raise_layer {
            bindings = <
&kp ESC         &trans  &trans  &trans        &trans  &trans       &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp SQT    &kp DOUBLE_QUOTES  &kp MINUS      &kp EQUAL
&kp LCTRL       &trans  &trans  &trans        &trans  &trans       &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp PG_UP  &kp UP             &kp PAGE_DOWN  &kp ENTER
&kp LEFT_SHIFT  &trans  &trans  &trans        &trans  &trans       &kp NON_US_BACKSLASH  &kp PIPE           &kp LEFT   &kp DOWN           &kp RIGHT      &kp RALT
                                &kp LEFT_GUI  &mo 1   &kp SPACE    &kp SPACE             &trans             &kp ENTER
            >;
        };

        layer_3 {
            bindings = <
&kp ESC         &kp F1      &kp F2        &kp F3        &kp F4        &kp F5          &kp F6       &kp F7     &kp F8         &kp F9             &kp F10   &kp BACKSPACE
&kp LCTRL       &kp N1      &kp N2        &kp N3        &kp N4        &kp N5          &kp N6       &kp N7     &kp N8         &kp N9             &kp N0    &kp ENTER
&kp LEFT_SHIFT  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp AT_SIGN  &kp EQUAL  &kp SEMICOLON  &kp DOUBLE_QUOTES  &kp PLUS  &kp RIGHT_SHIFT
                                          &trans        &trans        &trans          &trans       &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
