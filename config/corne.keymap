/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>




/ {
    combos {
        compatible = "zmk,combos";

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <36 27>;
            layers = <0 2 1 3 4>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <36 26>;
            layers = <0 1 2 3 4>;
        };

        select {
            bindings = <&kp LG(D)>;
            key-positions = <36 15>;
        };

        paste {
            bindings = <&kt LG(V)>;
            key-positions = <36 28>;
            layers = <0 1 2 3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &mo 4
            >;
        };

        lower_layer {
            bindings = <
&kp ESC         &kp N1      &kp N2        &kp N3        &kp N4        &kp N5          &kp N6   &kp N7  &kp N8    &kp N9  &kp N0  &kp BACKSPACE
&kp CAPSLOCK    &trans      &trans        &trans        &trans        &trans          &trans   &trans  &trans    &trans  &trans  &trans
&kp LEFT_SHIFT  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_SEL 4    &trans   &trans  &trans    &trans  &trans  &kp RIGHT_SHIFT
                                          &kp LGUI      &trans        &kp SPACE       &kp RET  &mo 2   &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6             &kp N7         &kp N8    &kp N9    &kp N0       &kp BACKSPACE
&kp LCTRL       &trans  &trans  &kp D     &trans  &trans       &kp C_VOLUME_UP    &kp PAGE_UP    &kp TAB   &kp UP    &kp LS(TAB)  &trans
&kp LEFT_SHIFT  &trans  &kp X   &kp C     &kp V   &trans       &kp C_VOLUME_DOWN  &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT    &kp RIGHT_SHIFT
                                &kp RALT  &mo 1   &kp LCTRL    &kp RET            &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &kp BACKSPACE
&kp CAPSLOCK    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &kp RIGHT_SHIFT
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp ESCAPE      &trans  &trans  &trans    &trans  &trans       &trans                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSPACE
&kp CAPSLOCK    &trans  &trans  &trans    &trans  &trans       &kp LC(LG(N5))        &kp NON_US_BACKSLASH  &kp PIPE               &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp ENTER
&kp LEFT_SHIFT  &trans  &trans  &trans    &trans  &trans       &kp LG(LC(NUMBER_4))  &trans                &kp LEFT               &kp SQT           &kp DOUBLE_QUOTES  &kt RIGHT
                                &kp LGUI  &trans  &kp SPACE    &kp ENTER             &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};


